#***************************************************************************
# Project:  NextGIS Manuscript
# Purpose:  cmake script
# Author:   Dmitry Baryshnikov, bishop.dev@gmail.com
#***************************************************************************
#   Copyright (C) 2015-2018 NextGIS, info@nextgis.ru
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#***************************************************************************

cmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)

project(manuscript)

# some init settings
set(CMAKE_COLOR_MAKEFILE ON)
# set path to additional CMake modules
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

if(NOT DEFINED PACKAGE_VENDOR)
    set(PACKAGE_VENDOR nextgis)
endif()

add_definitions(-DPACKAGE_VENDOR=${PACKAGE_VENDOR})

if(APPLE)
    set(OSX_FRAMEWORK ON)
endif()

if(OSX_FRAMEWORK)
    set(INSTALL_BIN_DIR "Applications" CACHE INTERNAL "Installation directory for executables" FORCE)
    set(INSTALL_LIB_DIR "Library/Frameworks" CACHE INTERNAL "Installation directory for libraries" FORCE)
    set(SKIP_INSTALL_HEADERS ON)
    set(SKIP_INSTALL_FILES ON)

    set(CMAKE_MACOSX_RPATH ON)
else()
    include(GNUInstallDirs)

    set(INSTALL_BIN_DIR ${CMAKE_INSTALL_BINDIR} CACHE INTERNAL "Installation directory for executables" FORCE)
    set(INSTALL_LIB_DIR ${CMAKE_INSTALL_LIBDIR} CACHE INTERNAL "Installation directory for libraries" FORCE)
    set(INSTALL_INC_DIR "${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}" CACHE INTERNAL "Installation directory for headers" FORCE)
    set(INSTALL_SHARE_DIR "${CMAKE_INSTALL_DATADIR}/${PACKAGE_VENDOR}/${PROJECT_NAME}" CACHE INTERNAL "Installation directory for share data" FORCE)
    set(INSTALL_PKGCONFIG_DIR "${INSTALL_LIB_DIR}/pkgconfig" CACHE INTERNAL "Installation directory for pkgconfig (.pc) files" FORCE)
    set(INSTALL_TRANSLATIONS_DIR "${CMAKE_INSTALL_DATADIR}/translations" CACHE INTERNAL "Installation directory for translations" FORCE)
endif()

set(CMAKE_INCLUDE_CURRENT_DIR ON)

include(util)
check_version(MANUSCRIPT_MAJOR_VERSION MANUSCRIPT_MINOR_VERSION MANUSCRIPT_PATCH_NUMBER)
set(VERSION ${MANUSCRIPT_MAJOR_VERSION}.${MANUSCRIPT_MINOR_VERSION}.${MANUSCRIPT_PATCH_NUMBER})
report_version(${PROJECT_NAME} ${VERSION})

# NOTE: This is for developing only.
# Use find_anyproject(NGSTD REQUIRED COMPONENTS framework)
# set(WITH_GDAL_EXTERNAL ON)
# set(WITH_OpenSSL_EXTERNAL ON)
# set(NGSTD_LIBRARIES ngstd_core5 ngstd_framework5)
# add_subdirectory(lib)
# include_directories(lib/src)
# end NOTE

include(FindAnyProject)
add_subdirectory(translations)
add_subdirectory(src)
